// Code generated by goctl. DO NOT EDIT.
// Source: equipment.proto

package server

import (
	"context"

	"wk-middleground/equipment_srv/internal/logic"
	"wk-middleground/equipment_srv/internal/svc"
	"wk-middleground/equipment_srv/pb"
)

type EquipmentServer struct {
	svcCtx *svc.ServiceContext
	__.UnimplementedEquipmentServer
}

func NewEquipmentServer(svcCtx *svc.ServiceContext) *EquipmentServer {
	return &EquipmentServer{
		svcCtx: svcCtx,
	}
}

// 数据查询
func (s *EquipmentServer) GetEqpData(ctx context.Context, in *__.EquipmentRequest) (*__.EquipmentResponse, error) {
	l := logic.NewGetEqpDataLogic(ctx, s.svcCtx)
	return l.GetEqpData(in)
}

// 绑定设备
func (s *EquipmentServer) BindEqpData(ctx context.Context, in *__.BindRequest) (*__.ResRequest, error) {
	l := logic.NewBindEqpDataLogic(ctx, s.svcCtx)
	return l.BindEqpData(in)
}

// 血糖仪数据上报
func (s *EquipmentServer) UpXtyData(ctx context.Context, in *__.EquipmentRequest) (*__.ResRequest, error) {
	l := logic.NewUpXtyDataLogic(ctx, s.svcCtx)
	return l.UpXtyData(in)
}

// 血氧仪数据上报
func (s *EquipmentServer) UpXyyData(ctx context.Context, in *__.EquipmentRequest) (*__.ResRequest, error) {
	l := logic.NewUpXyyDataLogic(ctx, s.svcCtx)
	return l.UpXyyData(in)
}
