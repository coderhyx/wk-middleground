// Code generated by goctl. DO NOT EDIT.
// Source: score.proto

package score

import (
	"context"

	__ "wk-middleground/score_srv/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateReq  = __.CreateReq
	CreateResp = __.CreateResp
	GetReq     = __.GetReq
	GetResp    = __.GetResp
	UpdateReq  = __.UpdateReq

	Score interface {
		Create(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*CreateResp, error)
		Update(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*CreateResp, error)
		DtmCreate(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*CreateResp, error)
		DtmRollback(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*CreateResp, error)
		GetScore(ctx context.Context, in *GetReq, opts ...grpc.CallOption) (*GetResp, error)
	}

	defaultScore struct {
		cli zrpc.Client
	}
)

func NewScore(cli zrpc.Client) Score {
	return &defaultScore{
		cli: cli,
	}
}

func (m *defaultScore) Create(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*CreateResp, error) {
	client := __.NewScoreClient(m.cli.Conn())
	return client.Create(ctx, in, opts...)
}

func (m *defaultScore) Update(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*CreateResp, error) {
	client := __.NewScoreClient(m.cli.Conn())
	return client.Update(ctx, in, opts...)
}

func (m *defaultScore) DtmCreate(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*CreateResp, error) {
	client := __.NewScoreClient(m.cli.Conn())
	return client.DtmCreate(ctx, in, opts...)
}

func (m *defaultScore) DtmRollback(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*CreateResp, error) {
	client := __.NewScoreClient(m.cli.Conn())
	return client.DtmRollback(ctx, in, opts...)
}

func (m *defaultScore) GetScore(ctx context.Context, in *GetReq, opts ...grpc.CallOption) (*GetResp, error) {
	client := __.NewScoreClient(m.cli.Conn())
	return client.GetScore(ctx, in, opts...)
}
